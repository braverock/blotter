% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/txnsim.R
\name{txnsim}
\alias{txnsim}
\title{Monte Carlo analysis of transactions}
\usage{
txnsim(Portfolio, n = 10, replacement = TRUE, tradeDef = "flat.to.flat",
  ...)
}
\arguments{
\item{Portfolio}{string identifying a portfolio}

\item{n}{number of simulations, default = 100}

\item{replacement}{sample with or without replacement, default TRUE}

\item{tradeDef}{string to determine which definition of 'trade' to use. See \code{\link{tradeStats}}}

\item{\dots}{any other passthrough parameters}
}
\value{
a list object of class 'txnsim' containing:
\itemize{
  \item{\code{backtest.trades}:}{list by symbol containing trade start, quantity, duration from the original backtest}
  \item{\code{replicates}:}{a list by symbol containing all the resampled start,quantity, duration time series replicates}
  \item{\code{transactions}:}{a list by symbol for each replicate of the Txn object passed to \code{\link{addTxns}}}
  \item{\code{cumpl}:}{an \code{xts} object containing the cumulative P&L of each replicate portfolio}
  \item{\code{initEq}:}{a numeric variable containing the initEq of the portfolio, for starting portfolio value}
  \item{\code{seed}:}{ the value of \code{.Random.seed} for replication, if required}
  \item{\code{call}:}{an object of type \code{call} that contains the \code{txnsim} call}
}

Note that this object and its slots may change in the future.
Slots \code{replicates},\code{transactions}, and \code{call} are likely
to exist in all future versions of this function, but other slots may be added
and removed as \code{S3method}'s are developed.
}
\description{
Running simulations with similar properties as the backtest or production
portfolio may allow the analyst to evaluate the distribution of returns
possible with similat trading approaches and evaluate skill versus luck or
overfitting.
}
\details{
If \code{update=TRUE} (the default), the user may wish to pass \code{Interval}
in dots to mark the portfolio at a different frequency than the market data,
especially for intraday market data.  Note that market data must be available
to call \code{\link{updatePortf}} on.

With \code{tradeDef='flat.to.flat'}, the samples are simply rearranging 
quantity and duration of round turns.  This may be enough for a strategy that
only puts on a single level per round turn.

With \code{tradeDef='increased.to.reduced'}, typically used for more complex 
strategies, the simulation is also significantly more complicated, especially
with \code{replacement=TRUE}.  In this latter case, the simulation must try 
to retain stylized factos of the observed strategy, specifically:

\itemize{
  \item{percent time in market}
  \item{percent time flat}
  \item{ratio of long to short position taking}
  \item{number of levels or layered trades observed}
}

In order to do this, samples are taken and randomized for flat periods, 
short periods, and long periods, and then these samples are interleaved and 
layered to construct the random strategy.  The overall goal is to construct a 
random strategy that preserves as many of the stylized facts (or style) of
the observed strtaegy as possible, while demonstrating no skill.  The round 
turn trades of the random replicate strategies, while outwardly resembling 
the original strategy in summaryt time series statstis, are the result of 
random combinations of observed features taking place at random times in the
observed time period.

It should be noted that the first opened trade of the observed series and the
replicates will take place at the same time.  Quantity and duration may differ,
but the trade will start at the same time, unless the first sampled period is
a flat one.  We may choose to relax this in the future and add or subtract a 
short amount of duration to the replicates to randomize the first entry more
fully as well.
}
\examples{
\dontrun{

  n <- 10

  ex.txnsim <- function(Portfolio,n=10,replacement=FALSE, tradeDef='increased.to.reduced') {
    #out <- txnsim(Portfolio,n,replacement)
    out <- txnsim(Portfolio,n,replacement, tradeDef = tradeDef)
    #out <- txnsim(Portfolio,n,replacement, tradeDef = "increased.to.reduced")
    for (i in 1:n){
      p<-paste('txnsim',Portfolio,i,sep='.')
      symbols<-names(getPortfolio(p)$symbols)
      for(symbol in symbols) {
        dev.new()
        chart.Posn(p,symbol)
      }
    }
    out
  } # end ex.txnsim

  demo('longtrend',ask=FALSE)
  lt.nr <- ex.txnsim('longtrend',n, replacement = FALSE)
  lt.wr <- ex.txnsim('longtrend',n, replacement = TRUE)

  require('quantstrat') #sorry for the circular dependency
  demo('rsi',ask=FALSE)
  rsi.nr <- ex.txnsim('RSI',n, replacement = FALSE)
  rsi.wr <- ex.txnsim('RSI',n, replacement = TRUE)

} #end dontrun

}
\references{
Burns, Patrick. 2006. Random Portfolios for Evaluating Trading Strategies. http://papers.ssrn.com/sol3/papers.cfm?abstract_id=881735
}
\seealso{
\code{\link{mcsim}}, \code{\link{updatePortf}}
}
\author{
Jasen Mackie, Brian G. Peterson
}
